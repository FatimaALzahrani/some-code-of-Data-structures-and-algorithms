/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Quick_Sort;

/**
 *
 * ظپظƒط±طھظ‡ ظٹظ‚ط³ظ… ط§ظ„ظ…طµظپظˆظپظ‡ ظ„ط¬ط²ط£ظٹظ† ظˆظٹط­ط· ط§ظ„ظ„ظٹ ط§ظƒط¨ط± ظ…ظ† ظ‚ظٹظ…ط© ط§ظ„ط¨ظپظˆطھ  ط¨ط¹ط¯ظ‡ ظˆط§ظ„ظ„ظٹ ط§ظ‚ظ„ ظ…ظ†ظ‡ ظ‚ط¨ظ„ 
 * ظˆط§ظ„ظ…ط³ط§ظˆظٹظ‡ ظ„ظ‡ ظ‚ط¨ظ„ ط§ظˆ ط¨ط¹ط¯ ط¹ط§ط¯ظٹ 
 * 
 */
public class Quick_Sort {
 int A[];//ط¹ط±ظپطھ ظ…طµظپظˆظپظ‡ ظ„طھط®ط²ظٹظ† ط§ظ„ط¹ظ†ط§طµط±
 int capacity;//ط­ط¬ظ… ط§ظ„ظ…طµظپظˆظپظ‡
 int size;//ط¹ط´ط§ظ† ط§ط°ط§ ط¬ظٹظ†ط§ ظ†ط¶ظٹظپ
 SortingArray (int c) {//ظƒظˆظ†ط³طھط±ظƒطھط±
     size=0;
     capacity=c;
  A = new int[capacity];//ط§ظ†ط´ط§طھ ظ…طµظپظˆظپظ‡
}
 void printArray(){//ط·ط¨ط§ط¹ط© ط§ظ„ظ…طµظپظˆظپظ‡
  for (int i=0; i<A.length; ++i) //ظپظˆط± ظ„ظˆط¨ ط¹ط´ط§ظ† ظ†ظ…ط± ط¹ظ„ظ‰ ظƒظ„ ط§ظ„ط¹ظ†ط§طµط±
    System.out.print (A[i]+" ");
    System.out.println();
 }
 void addArray(int item) { //ط§ط¶ط§ظپظ‡ ط¹ظ†طµط±
     A[size] = item;//ظ†ط®ظ„ظٹ ط§ط®ط± ط¹ظ†طµط± ط§ظ„ط¹ظ†طµط± ط§ظ„ط¬ط¯ظٹط¯
     size= size + 1; }//ظ†ط²ظˆط¯ ط¹ظ„ظ‰ ط§ظ„ط­ط¬ظ…
  
 /* طھط£ط®ط° ظ‡ط°ظ‡ ط§ظ„ظˆط¸ظٹظپط© ط§ظ„ط¹ظ†طµط± ط§ظ„ط£ط®ظٹط± ظƒظ…ط­ظˆط±  ظˆطھط¶ط¹ ط§ظ„ط¹ظ†طµط± ط§ظ„ظ…ط­ظˆط±ظٹ ظپظٹ ظ…ظˆط¶ط¹ظ‡
 ظˆطھط¶ط¹ ظƒظ„ ط§ظ„ط¹ظ†ط§طµط± ط§ظ„ط£طµط؛ط± ط¹ظ„ظ‰ ظٹط³ط§ط± ط§ظ„ظ…ط­ظˆط± ظˆط¬ظ…ظٹط¹ ط§ظ„ط¹ظ†ط§طµط±
 ط§ظ„ط£ظƒط¨ط± ط¹ظ„ظ‰ ظٹظ…ظٹظ† ط§ظ„ظ…ط­ظˆط± */
 int partition (int left , int right) {
     //pivot = ط§ظ„ظ‚ظٹظ…ط© ط§ظ„ظ„ظٹ ط§ط®طھط±طھظ‡ط§
    int pivot = A[right]; 
    int i = (left-1);//ط§ظ„ظ„ظٹ ظ‚ط¨ظ„ ط§ظ„ط¨ظٹظپظˆطھ ظٹط³ظ„ط±ظ‡ ط¹ظ„ظ‰ ط·ظˆظ„
 for (int j=left; j<right; j++){//ظ„ظˆ ظƒط§ظ† ط§ظ„ظٹط³ط§ط± ط§ظ‚ظ„ ظ…ظ† ط§ظ„ظٹظ…ظٹظ†
     if (A[j] <= pivot){// ظˆظƒط§ظ† ط§ظ„ط¹ظ†طµط± ظپظٹ ط§ظ„ظٹط³ط§ط± ط§ظ‚ظ„ ظ…ظ† ط§ظ„ط¨ظٹظپظˆطھ
      //A[i] ظˆA[j] ط¨ط¯ظ„
      int temp = A[i];
      A[i] = A[j];
      A[j] = temp;
         i++;//ط²ظˆط¯ ط§ظ„ط§ظٹ
     }
 }
 //ظ„ظˆ ظƒط§ظ† ط§ظ„ظٹظ…ظٹظ† ط§ظ‚ظ„ ظ…ظ† ط§ظ„ظٹط³ط§ط±
//  A[i+1] ظˆ A[pivot] ط¨ط¯ظ„
int temp = A[i+1];
A[i+1] = A[right];
A[right] = temp;
return i+1;
 } 

 void QuickSort (int left, int right) { 
 /* left --> Starting index,
 right --> Ending index */
  if (left < right) { //ظ„ظˆ ط§ظ„ظٹط³ط§ط± ط§ظ‚ظ„ ظ…ظ† ط§ظ„ظٹظ…ظٹظ†
 // pi is partitioning index
 int pi = partition (left, right);//ظٹظ‚ط³ظ… ط§ظ„ط§ط¹ط¯ط§ط¯ ظ„ظٹط³ط§ط± ظˆظٹظ…ظٹظ† ط¨ط§ط³طھط¯ط¹ط§ط، ط§ظ„ط¯ط§ظ„ظ‡ ط§ظ„ظ„ظٹ ظ‚ط¨ظ„
// ظپط±ط² ط§ظ„ط¹ظ†ط§طµط± ط¨ط´ظƒظ„ ظ…طھظƒط±ط± ظ‚ط¨ظ„ ط§ظ„طھظ‚ط³ظٹظ… ظˆط¨ط¹ط¯ ط§ظ„طھظ‚ط³ظٹظ… 
  QuickSort (left, pi-1);//ط§ظ„ظٹط³ط§ط± ط§ظ„ظ„ظٹ ط§ظ‚ظ„ ظ…ظ†ظ‡ ط¨ظٹظƒظˆظ† ظ‚ط¨ظ„ ط§ظ„ ط¨ظٹ ط§ظٹ
  QuickSort (pi+1, right);// ط§ظ„ظٹظ…ظٹظ† ط§ظ„ظ„ظٹ ط§ظƒط¨ط± ظ…ظ†ظ‡ ط¨ظٹظƒظˆظ† ط¨ط¹ط¯ ط§ظ„ط¨ظٹ ط§ظٹ
  }
 } 
}
